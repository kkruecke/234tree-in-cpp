Printing tree in level order


level = 1     [ 50 ] 

level = 2    [ 23 ]  [ 70 ] 

level = 3   [ 15 ]  [ 30 ]  [ 60 ]  [ 90, 97 ] 

level = 4  [ 1, 2, 10 ]  [ 17, 20 ]  [ 26, 27 ]  [ 33, 37, 40 ]  [ 51, 55 ]  [ 62, 69 ]  [ 79, 80, 87 ]  [ 92 ]  [ 100, 201 ] 
======================

Printing actual tree in order, using lambda closure

1 2 10 15 17 20 23 26 27 30 33 37 40 50 51 55 60 62 69 70 79 80 87 90 92 97 100 201 

Tree size is 28 before removing item 60


Tree before convertTwoNode called during remove(60,0x1feb020)  where 0x1feb020 is [50]

level = 1     [ 50 ] 

level = 2    [ 23 ]  [ 70 ] 

level = 3   [ 15 ]  [ 30 ]  [ 60 ]  [ 90, 97 ] 

level = 4  [ 1, 2, 10 ]  [ 17, 20 ]  [ 26, 27 ]  [ 33, 37, 40 ]  [ 51, 55 ]  [ 62, 69 ]  [ 79, 80, 87 ]  [ 92 ]  [ 100, 201 ] 

Node after convertTwoNode() called during remove(60,0x1feb020) is [23, 50, 70]

Tree after convertTwoNode called node is:


level = 1     [ 23, 50, 70 ] 

level = 2    [ 15 ]  [ 30 ]  [ 60 ]  [ 90, 97 ] 

level = 3   [ 1, 2, 10 ]  [ 17, 20 ]  [ 26, 27 ]  [ 33, 37, 40 ]  [ 51, 55 ]  [ 62, 69 ]  [ 79, 80, 87 ]  [ 92 ]  [ 100, 201 ] 


Tree before convertTwoNode called during remove(60,0x1feade0)  where 0x1feade0 is [60]

level = 1    [ 23, 50, 70 ] 

level = 2   [ 15 ]  [ 30 ]  [ 60 ]  [ 90, 97 ] 

level = 3  [ 1, 2, 10 ]  [ 17, 20 ]  [ 26, 27 ]  [ 33, 37, 40 ]  [ 51, 55 ]  [ 62, 69 ]  [ 79, 80, 87 ]  [ 92 ]  [ 100, 201 ] 

Node after convertTwoNode() called during remove(60,0x1feade0) is [60, 70]

Tree after convertTwoNode called node is:


level = 1    [ 23, 50, 90 ] 

level = 2   [ 15 ]  [ 30 ]  [ 60, 70 ]  [ 97 ] 

level = 3  [ 1, 2, 10 ]  [ 17, 20 ]  [ 26, 27 ]  [ 33, 37, 40 ]  [ 51, 55 ]  [ 62, 69 ]  [ 79, 80, 87 ]  [ 92 ]  [ 100, 201 ] 

item 60 successfully removed 
Tree size is 28 after attempting to remove item 60



=======Tree level order print =====================


level = 1     [ 23, 50, 90 ] 

level = 2    [ 15 ]  [ 30 ]  [ 62, 70 ]  [ 97 ] 

level = 3   [ 1, 2, 10 ]  [ 17, 20 ]  [ 26, 27 ]  [ 33, 37, 40 ]  [ 51, 55 ]  [ 69 ]  [ 79, 80, 87 ]  [ 92 ]  [ 100, 201 ] 

=================== Normal Tree Print using lambda closure =======================

1 2 10 15 17 20 23 26 27 30 33 37 40 50 51 55 62 69 70 79 80 87 90 92 97 100 201 
Tree size is 28 before removing item 30


Tree before convertTwoNode called during remove(30,0x1feaf20)  where 0x1feaf20 is [30]

level = 1    [ 23, 50, 90 ] 

level = 2   [ 15 ]  [ 30 ]  [ 62, 70 ]  [ 97 ] 

level = 3  [ 1, 2, 10 ]  [ 17, 20 ]  [ 26, 27 ]  [ 33, 37, 40 ]  [ 51, 55 ]  [ 69 ]  [ 79, 80, 87 ]  [ 92 ]  [ 100, 201 ] 

Node after convertTwoNode() called during remove(30,0x1feaf20) is [30, 50]

Tree after convertTwoNode called node is:


level = 1    [ 23, 62, 90 ] 

level = 2   [ 15 ]  [ 30, 50 ]  [ 70 ]  [ 97 ] 

level = 3  [ 1, 2, 10 ]  [ 17, 20 ]  [ 26, 27 ]  [ 33, 37, 40 ]  [ 51, 55 ]  [ 69 ]  [ 79, 80, 87 ]  [ 92 ]  [ 100, 201 ] 

item 30 successfully removed 
Tree size is 28 after attempting to remove item 30



=======Tree level order print =====================


level = 1     [ 23, 62, 90 ] 

level = 2    [ 15 ]  [ 33, 50 ]  [ 70 ]  [ 97 ] 

level = 3   [ 1, 2, 10 ]  [ 17, 20 ]  [ 26, 27 ]  [ 37, 40 ]  [ 51, 55 ]  [ 69 ]  [ 79, 80, 87 ]  [ 92 ]  [ 100, 201 ] 

=================== Normal Tree Print using lambda closure =======================

1 2 10 15 17 20 23 26 27 33 37 40 50 51 55 62 69 70 79 80 87 90 92 97 100 201 
Tree size is 28 before removing item 10


Tree before convertTwoNode called during remove(10,0x1fead20)  where 0x1fead20 is [15]

level = 1    [ 23, 62, 90 ] 

level = 2   [ 15 ]  [ 33, 50 ]  [ 70 ]  [ 97 ] 

level = 3  [ 1, 2, 10 ]  [ 17, 20 ]  [ 26, 27 ]  [ 37, 40 ]  [ 51, 55 ]  [ 69 ]  [ 79, 80, 87 ]  [ 92 ]  [ 100, 201 ] 

Node after convertTwoNode() called during remove(10,0x1fead20) is [15, 23]

Tree after convertTwoNode called node is:


level = 1    [ 33, 62, 90 ] 

level = 2   [ 15, 23 ]  [ 50 ]  [ 70 ]  [ 97 ] 

level = 3  [ 1, 2, 10 ]  [ 17, 20 ]  [ 26, 27 ]  [ 37, 40 ]  [ 51, 55 ]  [ 69 ]  [ 79, 80, 87 ]  [ 92 ]  [ 100, 201 ] 

item 10 successfully removed 
Tree size is 27 after attempting to remove item 10



=======Tree level order print =====================


level = 1     [ 33, 62, 90 ] 

level = 2    [ 15, 23 ]  [ 50 ]  [ 70 ]  [ 97 ] 

level = 3   [ 1, 2 ]  [ 17, 20 ]  [ 26, 27 ]  [ 37, 40 ]  [ 51, 55 ]  [ 69 ]  [ 79, 80, 87 ]  [ 92 ]  [ 100, 201 ] 

=================== Normal Tree Print using lambda closure =======================

1 2 15 17 20 23 26 27 33 37 40 50 51 55 62 69 70 79 80 87 90 92 97 100 201 
Tree size is 27 before removing item 20

item 20 successfully removed 
Tree size is 26 after attempting to remove item 20



=======Tree level order print =====================


level = 1     [ 33, 62, 90 ] 

level = 2    [ 15, 23 ]  [ 50 ]  [ 70 ]  [ 97 ] 

level = 3   [ 1, 2 ]  [ 17 ]  [ 26, 27 ]  [ 37, 40 ]  [ 51, 55 ]  [ 69 ]  [ 79, 80, 87 ]  [ 92 ]  [ 100, 201 ] 

=================== Normal Tree Print using lambda closure =======================

1 2 15 17 23 26 27 33 37 40 50 51 55 62 69 70 79 80 87 90 92 97 100 201 
Tree size is 26 before removing item 50


Tree before convertTwoNode called during remove(50,0x1feaf20)  where 0x1feaf20 is [50]

level = 1    [ 33, 62, 90 ] 

level = 2   [ 15, 23 ]  [ 50 ]  [ 70 ]  [ 97 ] 

level = 3  [ 1, 2 ]  [ 17 ]  [ 26, 27 ]  [ 37, 40 ]  [ 51, 55 ]  [ 69 ]  [ 79, 80, 87 ]  [ 92 ]  [ 100, 201 ] 

Node after convertTwoNode() called during remove(50,0x1feaf20) is [33, 50]

Tree after convertTwoNode called node is:


level = 1    [ 23, 62, 90 ] 

level = 2   [ 15 ]  [ 33, 50 ]  [ 70 ]  [ 97 ] 

level = 3  [ 1, 2 ]  [ 17 ]  [ 26, 27 ]  [ 37, 40 ]  [ 51, 55 ]  [ 69 ]  [ 79, 80, 87 ]  [ 92 ]  [ 100, 201 ] 

item 50 successfully removed 
Tree size is 26 after attempting to remove item 50



=======Tree level order print =====================


level = 1     [ 23, 62, 90 ] 

level = 2    [ 15 ]  [ 33, 51 ]  [ 70 ]  [ 97 ] 

level = 3   [ 1, 2 ]  [ 17 ]  [ 26, 27 ]  [ 37, 40 ]  [ 55 ]  [ 69 ]  [ 79, 80, 87 ]  [ 92 ]  [ 100, 201 ] 

=================== Normal Tree Print using lambda closure =======================

1 2 15 17 23 26 27 33 37 40 51 55 62 69 70 79 80 87 90 92 97 100 201 
Tree size is 26 before removing item 40

item 40 successfully removed 
Tree size is 25 after attempting to remove item 40



=======Tree level order print =====================


level = 1     [ 23, 62, 90 ] 

level = 2    [ 15 ]  [ 33, 51 ]  [ 70 ]  [ 97 ] 

level = 3   [ 1, 2 ]  [ 17 ]  [ 26, 27 ]  [ 37 ]  [ 55 ]  [ 69 ]  [ 79, 80, 87 ]  [ 92 ]  [ 100, 201 ] 

=================== Normal Tree Print using lambda closure =======================

1 2 15 17 23 26 27 33 37 51 55 62 69 70 79 80 87 90 92 97 100 201 
Tree size is 25 before removing item 70


Tree before convertTwoNode called during remove(70,0x1feade0)  where 0x1feade0 is [70]

level = 1    [ 23, 62, 90 ] 

level = 2   [ 15 ]  [ 33, 51 ]  [ 70 ]  [ 97 ] 

level = 3  [ 1, 2 ]  [ 17 ]  [ 26, 27 ]  [ 37 ]  [ 55 ]  [ 69 ]  [ 79, 80, 87 ]  [ 92 ]  [ 100, 201 ] 

Node after convertTwoNode() called during remove(70,0x1feade0) is [62, 70]

Tree after convertTwoNode called node is:


level = 1    [ 23, 51, 90 ] 

level = 2   [ 15 ]  [ 33 ]  [ 62, 70 ]  [ 97 ] 

level = 3  [ 1, 2 ]  [ 17 ]  [ 26, 27 ]  [ 37 ]  [ 55 ]  [ 69 ]  [ 79, 80, 87 ]  [ 92 ]  [ 100, 201 ] 

item 70 successfully removed 
Tree size is 25 after attempting to remove item 70



=======Tree level order print =====================


level = 1     [ 23, 51, 90 ] 

level = 2    [ 15 ]  [ 33 ]  [ 62, 79 ]  [ 97 ] 

level = 3   [ 1, 2 ]  [ 17 ]  [ 26, 27 ]  [ 37 ]  [ 55 ]  [ 69 ]  [ 80, 87 ]  [ 92 ]  [ 100, 201 ] 

=================== Normal Tree Print using lambda closure =======================

1 2 15 17 23 26 27 33 37 51 55 62 69 79 80 87 90 92 97 100 201 
Tree size is 25 before removing item 80

item 80 successfully removed 
Tree size is 24 after attempting to remove item 80



=======Tree level order print =====================


level = 1     [ 23, 51, 90 ] 

level = 2    [ 15 ]  [ 33 ]  [ 62, 79 ]  [ 97 ] 

level = 3   [ 1, 2 ]  [ 17 ]  [ 26, 27 ]  [ 37 ]  [ 55 ]  [ 69 ]  [ 87 ]  [ 92 ]  [ 100, 201 ] 

=================== Normal Tree Print using lambda closure =======================

1 2 15 17 23 26 27 33 37 51 55 62 69 79 87 90 92 97 100 201 
Tree size is 24 before removing item 15


Tree before convertTwoNode called during remove(15,0x1fead20)  where 0x1fead20 is [15]

level = 1    [ 23, 51, 90 ] 

level = 2   [ 15 ]  [ 33 ]  [ 62, 79 ]  [ 97 ] 

level = 3  [ 1, 2 ]  [ 17 ]  [ 26, 27 ]  [ 37 ]  [ 55 ]  [ 69 ]  [ 87 ]  [ 92 ]  [ 100, 201 ] 

Node after convertTwoNode() called during remove(15,0x1fead20) is [15, 23, 33]

Tree after convertTwoNode called node is:


level = 1    [ 51, 90 ] 

level = 2   [ 15, 23, 33 ]  [ 62, 79 ]  [ 97 ] 

level = 3  [ 1, 2 ]  [ 17 ]  [ 26, 27 ]  [ 37 ]  [ 55 ]  [ 69 ]  [ 87 ]  [ 92 ]  [ 100, 201 ] 

item 15 successfully removed 
Tree size is 24 after attempting to remove item 15



=======Tree level order print =====================


level = 1     [ 51, 90 ] 

level = 2    [ 17, 26, 33 ]  [ 62, 79 ]  [ 97 ] 

level = 3   [ 1, 2 ]  [ 23 ]  [ 27 ]  [ 37 ]  [ 55 ]  [ 69 ]  [ 87 ]  [ 92 ]  [ 100, 201 ] 

=================== Normal Tree Print using lambda closure =======================

1 2 17 23 26 27 33 37 51 55 62 69 79 87 90 92 97 100 201 
Tree size is 24 before removing item 90

item 90 successfully removed 
Tree size is 24 after attempting to remove item 90



=======Tree level order print =====================


level = 1     [ 51, 79 ] 

level = 2    [ 17, 26, 33 ]  [ 62 ]  [ 92, 100 ] 

level = 3   [ 1, 2 ]  [ 23 ]  [ 27 ]  [ 37 ]  [ 55 ]  [ 69 ]  [ 87 ]  [ 97 ]  [ 201 ] 

=================== Normal Tree Print using lambda closure =======================

1 2 17 23 26 27 33 37 51 55 62 69 79 87 92 97 100 201 
Tree size is 24 before removing item 100


Tree before convertTwoNode called during remove(100,0x1feafa0)  where 0x1feafa0 is [92]

level = 1    [ 51, 79 ] 

level = 2   [ 17, 26, 33 ]  [ 62 ]  [ 92 ] 

level = 3  [ 1, 2 ]  [ 23 ]  [ 27 ]  [ 37 ]  [ 55 ]  [ 69 ]  [ 87 ]  [ 97, 100, 201 ] 

Node after convertTwoNode() called during remove(100,0x1feafa0) is [62, 79, 92]

Tree after convertTwoNode called node is:


level = 1    [ 51 ] 

level = 2   [ 17, 26, 33 ]  [ 62, 79, 92 ] 

level = 3  [ 1, 2 ]  [ 23 ]  [ 27 ]  [ 37 ]  [ 55 ]  [ 69 ]  [ 87 ]  [ 97, 100, 201 ] 

item 100 successfully removed 
Tree size is 23 after attempting to remove item 100



=======Tree level order print =====================


level = 1     [ 51 ] 

level = 2    [ 17, 26, 33 ]  [ 62, 79, 92 ] 

level = 3   [ 1, 2 ]  [ 23 ]  [ 27 ]  [ 37 ]  [ 55 ]  [ 69 ]  [ 87 ]  [ 97, 201 ] 

=================== Normal Tree Print using lambda closure =======================

1 2 17 23 26 27 33 37 51 55 62 69 79 87 92 97 201 
Tree size is 23 before removing item 27


Tree before convertTwoNode called during remove(27,0x1feb020)  where 0x1feb020 is [51]

level = 1    [ 51 ] 

level = 2   [ 17, 26, 33 ]  [ 62, 79, 92 ] 

level = 3  [ 1, 2 ]  [ 23 ]  [ 27 ]  [ 37 ]  [ 55 ]  [ 69 ]  [ 87 ]  [ 97, 201 ] 

Node after convertTwoNode() called during remove(27,0x1feb020) is [17, 51, 62]

Tree after convertTwoNode called node is:


level = 1    [ 17, 51, 62 ] 

level = 2   [ 1, 2 ]  [ 23 ]  [ 55 ]  [ 69 ] 


Tree before convertTwoNode called during remove(27,0x1feae60)  where 0x1feae60 is [23]

level = 1   [ 17, 51, 62 ] 

level = 2  [ 1, 2 ]  [ 23 ]  [ 55 ]  [ 69 ] 

Node after convertTwoNode() called during remove(27,0x1feae60) is [17, 23]

Tree after convertTwoNode called node is:


level = 1   [ 2, 51, 62 ] 

level = 2  [ 1 ]  [ 17, 23 ]  [ 55 ]  [ 69 ] 

item 27 not successfully removed 
Tree size is 23 after attempting to remove item 27



=======Tree level order print =====================


level = 1     [ 2, 51, 62 ] 

level = 2    [ 1 ]  [ 17, 23 ]  [ 55 ]  [ 69 ] 

=================== Normal Tree Print using lambda closure =======================

1 2 17 23 51 55 62 69 