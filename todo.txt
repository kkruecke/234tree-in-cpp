Test new remove(K key, Node234 *) code. Use TreePrinter and debug printing. Compare output with out-old.txt, too.

Comparing the before and after DebugPrinter output, shows all these tree values are missing after the removal of the first item 60:

Two node:   address(0x74dea0): key[0] = 92: parent[0x74df20]->children[2]->keys[0] = 92 <-- is Leaf 

Four node:  address(0x74df20): key[1] = 90: parent[ root ]->children[1]->keys[1] = 90

Three node: address(0x74e060): key[0] = 100: parent[0x74df20]->children[3]->keys[0] = 100 <-- is Leaf 

Three node: address(0x74e060): key[1] = 201: parent[0x74df20]->children[3]->keys[1] = 201 <-- is Leaf 

Four node:  address(0x74df20): key[2] = 97: parent[ root ]->children[1]->keys[2] = 97

Two node:   address(0x74e020): key[0] = 23: {Root}


Sources
=======

  Implementation links:

1.  http://www.cs.ubc.ca/~liorma/cpsc320/files/B-trees.pdf

This link has an excellent working example. The explanation is thorough and clear. It gives several example of deleting elements. It uses the in-order predecessor
rather than the successor when deleting.

2.  www.serc.iisc.ernet.in/~viren/Courses/2009/SE286/2-3Trees-Mod.ppt  

This link has a excellent working example and discusses how delete works, using descent restructuring. It uses the swap-with-successor for deletion of internal keys.
It contains a working tree example. It shows that when converting 2-nodes, we first check if we can rotation else we do a merge (since both siblings are 2-nodes).

3.  http://www.cs.toronto.edu/~krueger/cscB63h/lectures/tut04.txt 

This link has excellent pseudo code for both insertion and deletion with working example. But it does not restructure the key on the way down instead from the
leaf upward.

4. http://web.njit.edu/~wl256/download/cs610/n1561011.pdf

This link has a more high level pseudo code. 

5. http://www2.thu.edu.tw/~emtools/Adv.%20Data%20Structure/2-3,2-3-4%26red-blackTree_952.pdf 

This link discusses both 2 3 trees and 2 3 4 trees. It has examples and pseudo code, but the deletion logic points out that the root only can be a two node--I think?

6.  http://www.unf.edu/~broggio/cop3540/Chapter%2010%20-%202-3-4%20Trees%20-%20Part%201.ppt

This link has actual **Java implementation code** for insertion and for 2 3 4 tree interface and node interface, including members.

