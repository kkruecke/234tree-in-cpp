Better document 

 template<typename K> bool Tree234<K>::remove(K key, Node234 *current)

so the strategy of converting 2-nodes to 3- or 4-nodes during descent is obvious. 

The deletion code looks messy and confused, especially looking for the inorder successor.
Consider a tree descend_iterator class to use in the implementation, and use it, say, for searching for a hit, etc?

See key-descent-iterator.h


DesentSearchIterator finder(root);

do { 

  if (finder->found())
         break; 
      
} while (finder->next() != nullptr && !finder->eof());

    
