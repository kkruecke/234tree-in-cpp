Change code so that it does not return values using reference parameters anywhere in code. Methods affected:

1. SearchNode(Key key, int index& index);
2. DoSearch(.....)
3. getRemoveSuccessor(...) which calls DoSearch()

I will need to redesign DoSearch() and all methods that used DoSearch(). DoSearch() is called by the class iterator. Re-examine the iterator class? Can I make it simplier?
DoSearch() is only called by getRemoveSuccessor(). They don't seem a whole lot different. They both, however, use reference paramaters to return values. I want to eliminate this and use either a pair, a struct or a tuple to 
return the value using RVO.

The getRemoveSuccessor() code at the top for the leaf node case looks wrong. I call DoSearch--but simply search for the key again--huh, how can that be right? Compare the getRemoveSuccessor() code, which must also convert 2-nodes, as it searches for the in-order
successor, to 3- or 4-nodes, to iterator::getSuccessor(), which calls either getLeafNodeSuccessor() or getInternalNodeSuccessor(), neither of which call any other methods. 

